# Evergreen Project Config

# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# 12 minutes is the longest we'll ever run
exec_timeout_secs: 3600 # 12 minutes is the longest we'll ever run

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  "fetch source":
    - command: git.get_project
      params:
        directory: mongo-tableau-connector

  "generate expansions":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongo-tableau-connector
        script: |
          cat <<EOT > expansions.yml
          prepare_shell: |
            set -o errexit
          EOT
    - command: expansions.update
      params:
        file: mongo-tableau-connector/expansions.yml

  "setup python virtual environment":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongo-tableau-connector
        script: |
          ${prepare_shell}

          python3 -m venv .venv


  "install connector plugin sdk":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongo-tableau-connector
        script: |
          ${prepare_shell}

          # Clone connector-plugin-sdk and install packaging module
          git clone https://github.com/tableau/connector-plugin-sdk.git
          source ./.venv/bin/activate
          ( cd connector-plugin-sdk/connector-packager && python3 setup.py install )

  "validate connector XML format":
    - command: shell.exec
      type: test
      params:
        shell: bash
        working_dir: mongo-tableau-connector
        script: |
          ${prepare_shell}
          source ./.venv/bin/activate
          # Running packager validation step
          ( cd connector-plugin-sdk/connector-packager && python3 -m connector_packager.package \
          --validate-only --verbose ../../connector/ --log ../../logs 2>&1 | tee /dev/stdout \
          | grep "Validation succeeded." >/dev/null)

  "build taco bundle":
    - command: shell.exec
      type: test
      params:
        shell: bash
        working_dir: mongo-tableau-connector
        script: |
          ${prepare_shell}
          source ./.venv/bin/activate

          # Running packager from connector-packager dir
          ( cd connector-plugin-sdk/connector-packager && python3 -m connector_packager.package \
          --verbose ../../connector/ --dest ../../package --log ../../logs 2>&1 | tee /dev/stdout \
          | grep "Taco packaged" >/dev/null)

  "upload packaged connector":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongo-tableau-connector/package/mongodb_jdbc.taco
        remote_file: mongo-tableau-connector/artifacts/${version_id}/mongodb_jdbc.taco
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream

  "upload packager log file":
    - command: s3.put
      params:
        silent: true
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongo-tableau-connector/logs/packaging_logs.txt
        remote_file: mongo-tableau-connector/artifacts/${version_id}/packaging_logs.txt
        content_type: text/html
        bucket: mciuploads
        permissions: public-read
        display_name: "Tableau Connector Packaging Logfile"

pre:
  - func: "fetch source"
  - func: "setup python virtual environment"
  - func: "generate expansions"
  - func: "install connector plugin sdk"

post:
  - func: "upload packager log file"


tasks:
  - name: compile
    commands:
      - func: "validate connector XML format"
      - func: "build taco bundle"
      - func: "upload packaged connector"


buildvariants:

  - name: ubuntu2004
    display_name: "Ubuntu 20.04"
    run_on: [ ubuntu2004 ]
    tasks:
      - name: compile
